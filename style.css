@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600&display=swap");
* {
  margin: 0;
  padding: 0;
  font-family: "Poppins", sans-serif;
  box-sizing: border-box;
}
body {
  width: 100%;
  height: 200vh;
  background-color: #fbeeca;
  /* Đoạn này mình cho height: 200vh để xuất hiện thành scroll ( cuộn ) dọc, để các bạn có thể thấy được sự ứng dụng
  của thuộc tính Fixed nhé ♥ */
}
.header {
  position: fixed;
  width: 100%;
  transition: all 0.5s ease;
  /* Các bạn nhìn xem khi mình thêm thuộc tính position: fixed thì có khác gì khi nãy không nhé  */
}
.header:hover {
  background: #fff;
}
.header.active {
  background-color: #fff;
  /* Phần này lát mình sẽ thêm Js để tạo hiệu ứng chuyển màu khi scroll, lát nữa các bạn sẽ dễ hình dung hơn :D*/
}
.header-nav {
  position: relative;
  margin: 15px;
  padding: 15px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  /* Sau khi mình sử dụng display: flex, align-items: center và justify-content
  Các bạn sẽ được căn giữa các phần tử trong 1 khối, 1 cách thẳng hàng hơn 
  Các bạn có thể thấy tất cả các phần tử nằm trong thẻ header-nav đều nằm trên cùng 1 hàng và được căn ngang bằng với nhau
  Đó là sức mạnh của Flexbox keke */
}
.header-items {
  display: inline-block;
  margin: 0 25px;
}
.header-links {
  text-decoration: none;
  color: #241c15;
  font-size: 15px;
  font-weight: 550;
  line-height: 16px;
  transition: all 0.5s ease;
}
.header-links:hover {
  color: #007c89;
  text-decoration: underline;
}
.logo {
  position: absolute;
  cursor: pointer;
  width: 120px;
  height: 60px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.icon {
  cursor: pointer;
  font-size: 20px;
  color: #251d16;
  transition: all 0.3s ease;
}
.icon:hover {
  color: #007c89;
}
.header-right {
  display: flex;
  align-items: center;
}
.header-right_button {
  margin-left: 30px;
  padding: 10px;
  text-decoration: none;
  color: #241c15;
}
.login {
  display: inline-block;
  width: 100px;
  height: 40px;
  border: 2px solid #241c15;
  /* Lúc này để chữ Log In có thể căn giữa khung, ta có thể sử dụng lại Flexbox như ở phần trên
  Các bạn xem tiếp nhé ♥ */
  display: flex;
  align-items: center;
  justify-content: center;
  /* Đoạn này mình sử dụng justify-content: center là để căn giữa nhé, còn space-between là nó sẽ căn đều ra 2 bên */
  font-weight: 450;
  font-size: 15px;
  transition: all 0.3s ease;
}
.login:hover {
  background-color: rgb(37 27 19 / 10%);
}
.signup {
  margin-right: 20px;
  width: 120px;
  height: 45px;
  border: 2px solid #fff;
  /* Đoạn này cũng như button Login ở trên nhé, ta lại tiếp tục sử dụng Flexbox để căn giữa chữ  */
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #007c89;
  color: #fff;
  font-size: 13px;
  /* Khi nãy nó đã căn giữa rùi, nhưng do font-size mặc định của trình duyệt khá lớn, nên các bạn nhìn sẽ bị lệch
  Có 2 hướng giải quyết vấn đề trên
  1 là có thể chỉnh font-size nhỏ xuống như mình
  2 là các bạn có thể chỉnh width và height của button to ra, nó sẽ không bị lệch nhé ♥  */
  line-height: 15px;
  transition: all 0.3s ease;
}
.signup:hover {
  background-color: #004e56;
}

/* Vậy là mình đã xong phần hiệu chỉnh các phần tử với Flexbox để nó thẳng hàng và nhìn cân đối :D, cũng như cũng đã
cho các hiệu ứng khi hover ( rê chuột ) vào đổi màu chữ và background
Tiếp theo mình sẽ sử dụng 1 ít Javascript để tạo hiệu ứng
Khi ta scroll ( cuộn ) trang thì màu của Header sẽ thay đổi nhé ♥ */
